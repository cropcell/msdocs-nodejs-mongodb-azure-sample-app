extends layout

block content

  form(action='./addTask' method='POST' class='form-registration')
    div(class='row my-3')
        div(class='col-md-2 align-bottom')
          label(for="taskName" class='fs-5') New task
        div(class='col-md-8')
          input(class="form-control form-control-sm" type="text" name='taskName', placeholder="Enter new task here" )
        div(class='col-md-2 text-end')
          button(class='btn btn-success btn-sm' type='submit') Add task
        
  form(action='./upvote' method='POST' class='form-registration')
    div(class='row my-3')
        div(class='col-md-2 align-bottom')
          label(for="taskName" class='fs-5') New nameVote
        div(class='col-md-8')
          input(class="form-control form-control-sm" type="text" name='name', placeholder="Enter new nameVote here" )
        div(class='col-md-2 text-end')
          button(class='btn btn-success btn-sm' type='submit') Add nameVote


  h5(class='my-2') Current tasks

  div(class='row mb-3 border-bottom border-3')
    div(class='col-md-6 fw-bold') Task
    div(class='col-md-2 fw-bold') Created
    div(class='col-md-4 fw-bold') Action

  //- each task in currentTasks
  //-   div(class='row mb-2')
  //-     div(class='col-sm-6') #{task.taskName}
  //-     div(class='col-sm-2') #{format(task.createDate, "yyyy-MM-dd")}
  //-     div(class='col-sm-2')
  //-       form(action='./completeTask' method='POST' class='form-registration')
  //-         input(type='hidden' name='_id' value=`${task._id}`)
  //-         button(class='btn btn-primary btn-sm mx-1' type='submit') Complete
  //-     div(class='col-sm-2')
  //-       form(action='./deleteTask' method='POST' class='form-registration')
  //-         input(type='hidden' name='_id' value=`${task._id}`)
  //-         button(class='btn btn-danger btn-sm mx-1') Delete
  form(action='./updateVotes' method='POST' class='form-registration')
    div(class="allVoteContainer")
      each nameVote in votesToRender
        div(id=`${nameVote.name}` class='multiButton') 
          div() #{nameVote.name}
          input(type='hidden' name='_id' value=`${nameVote._id}`)
          input(type='hidden' name='name' value=`${nameVote.name}`)
          span(class='btn downvote btn-secondary') &#128403;
          span(class='btn upvote btn-secondary') &#128402;
          input(type='hidden' name='vote' value=`${nameVote.vote}`)
    button(class='btn btn-danger btn-sm mx-1' style="margin-top: 60px") submit!



  h5(class='my-2') Completed tasks
  div(class='row mb-3 border-bottom border-3')
    div(class='col-sm-8 fw-bold') Task
    div(class='col-sm-2 fw-bold') Created
    div(class='col-sm-2 fw-bold') Completed
  //- each task in completedTasks
  //-   div(class='row mb-3')
  //-     div(class='col-sm-8') #{task.taskName}
  //-     div(class='col-sm-2') #{format(task.createDate, "yyyy-MM-dd")}
  //-     div(class='col-sm-2') #{format(task.completedDate, "yyyy-MM-dd")}


  script.
    for(var i in document.getElementsByClassName('multiButton')){
      var voteBox = document.getElementsByClassName('multiButton')[i];
      if(voteBox.childNodes && voteBox.childNodes.length > 6){
       // console.log("eeee");
        var vote = parseInt(voteBox.childNodes[6].value);
        if(vote > 0)
          voteBox.childNodes[5].classList.add("selected");
        }
        else if(vote < 0){
          voteBox.childNodes[4].classList.add("selected");
        }
    }


    for(var i in document.getElementsByClassName('multiButton')){
      document.getElementsByClassName('upvote')[i].onclick = function (e) {  
        var parent = e.target.parentElement;
        console.log(parent.childNodes);
        if(parent.childNodes[4].classList.contains("selected")){
          parent.childNodes[4].classList.remove("selected");
          parent.childNodes[5].classList.add("selected");
          parent.childNodes[6].value = 1;
        }
        else if(parent.childNodes[5].classList.contains("selected")){
          parent.childNodes[5].classList.remove("selected");
          parent.childNodes[6].value = 0;
        }
        else{
          parent.childNodes[5].classList.add("selected");
          parent.childNodes[6].value = -1;
        }
      };
      document.getElementsByClassName('downvote')[i].onclick = function (e) {  
        var parent = e.target.parentElement;
        console.log(parent.childNodes);
        if(parent.childNodes[5].classList.contains("selected")){
          parent.childNodes[5].classList.remove("selected");
          parent.childNodes[4].classList.add("selected");
          parent.childNodes[6].value = -1;
        }
        else if(parent.childNodes[4].classList.contains("selected")){
          parent.childNodes[4].classList.remove("selected");
          parent.childNodes[6].value = 0;
        }
        else{
          parent.childNodes[4].classList.add("selected");
          parent.childNodes[6].value = 1;
        }
      };
    }